* 최초 오답으로 풀었던 방법

1. 아이디어
 - 입력 강의들을 배열에 저장하고,
   배열을 "종료 시간이 빠른 순으로 정렬"
 - PriorityQueue 에서 빠른 end 순으로 1개씩 peek()하여 확인
   1) peek()한 이전 강의 end <= 현재 강의 start 인 경우
     - peek()한 이전 강의를 remove()
     - 현재 강의를 PriorityQueue 에 add()
   2) peek()한 이전 강의 end > 현재 강의 start 인 경우
     - 필요 강의실 개수 + 1 증가
     - 현재 강의를 PriorityQueue 에 add()
   => PriorityQueue 에는 빠른 종료 시간 순으로,
      현재 진행중인 강의만 남음

2. 자료구조
 - Lesson[]
 - PriorityQueue<Lesson>

3. 시간 복잡도
 - 강의 배열 정렬: O(n log n)


